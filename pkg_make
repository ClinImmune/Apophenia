#!/bin/bash

distdir=dists
pkg=apophenia
version=0.23
date=`date +%d_%b_%y`
workdir=$(distdir)/$(pkg)-$(version)

#See README for notes.

#This script copies everything into a junk directory, that GNU's 
#prep materials will produce a thousand temp files in, concluding 
#with a file named apophenia-N.NN.tar.gz. Once that it is ready
#for distribution, the tar.gz arcive is copied to the main directory
#and this junk directory is erased. 
#If the appropriate tools are available, it also produces Debian pkgs.
#Finally, the script unzips the archive and compiles from the archive.

auto-install: auto
	cd $(workdir) && make
	cd $(workdir) && sudo make install

auto:
	rm -rf $(distdir)
	mkdir $(distdir)
	mkdir $(workdir)
	cp -rf `ls -I $(distdir)` $(workdir)
	cd $(workdir) && cp install/* .
	cd $(workdir) && mv Readme.user README
	cd $(workdir) && cp ChangeLog NEWS
	cd $(workdir) && sed -i "s/X\.XX/$(version)/" README apop_db.c configure.ac
	cd $(workdir) && sed -i -f prep_variadics.sed *c *h model/*c
	#add a directory with links to all headers:
	mkdir $(workdir)/apophenia
	#let the GNU prep everything and produce a distribution pkg.
	cd $(workdir) && dot -Tpng < doxy/structs.dot | pngtopnm | pnmscale .5 | pnmtopng > doxy/structs.png
	cd $(workdir) && echo "Ben Klemens (fluffmail@f-m.fm)" > AUTHORS
	cd $(workdir) && libtoolize
	cd $(workdir) && aclocal
	cd $(workdir) && autoconf 
	cd $(workdir) && autoheader
	cd $(workdir) && automake -a
	cd $(workdir) && ./configure
	cd $(workdir) && make dist
	mv $(workdir)/apophenia-$(version).tar.gz $(distdir)/apophenia-$(version)-$(date).tgz 

rpm: auto
	if [ ! -x ~/rpmbuild] ; then  \
	    mkdir ~/rpmbuild;       \
	    cd ~/rpmbuild && mkdir -p SOURCES BUILD RPMS/i686 RPMS/i386 SPECS SRPMS; \
	fi
	sed "s/PKGNAME/apophenia-$(version)-$(date).tgz/" < install/rpm.spec > ~/rpmbuild/SPECS/rpm.spec
	cp dists/apophenia-$(version)-$(date).tgz ~/rpmbuild/SOURCES
	rpmbuild -ba ~/rpmbuild/SPECS/rpm.spec
	cp ~/rpmbuild/RPMS/*/apophenia*rpm dists/.

deb: rpm
	cd $(distdir) && mkdir alien_tmp && cd alien_tmp && fakeroot alien -d ~/rpmbuild/RPMS/*/apophenia*rpm \
	&& mv apop*deb .. && cd .. && rm -rf alien_tmp

deb-install: deb
	sudo dpkg -i $(distdir)/apophenia*deb


deb-raw:
    #These are notes on making debian packages using the debian control file
    #I never really got it to work 100%. As above, I now just use alien to generate 
    #the deb from the RPM (which itself only needs a simple spec file to be built).
#Prerequisites: You will need the debian build tools; try:
# apt-get install dpkg-dev debhelper devscripts fakeroot linda dh-make 
#mv apophenia-*.deb dists
#mv apophenia-*.gz dists
#mv apophenia_* dists
#	./configure --enable-python
#    yes | dh_make -l -n -c GPL  
#    cp ../../debian_control debian/control
#    cp ../../debian_copyright debian/copyright
#    debuild -us -uc 
#    rm ../$pkg-$version.tar.gz
